function  F = stokes3d_wallzeq0(X,U,visc,e)
% This function solves the forces at position X given the velocity at X is
% U. The regularization parameter is e.
% X, U, and F are column vectors of size 3n by 1. 
% No slip wall at z=0, by Ling Xu, 2020 June  

n = length(X)/3;

xsurf = X(1:n);
ysurf = X(n+1:2*n);
zsurf = X(2*n+1:3*n);

% Construct M matrix on cell surface
M11 = zeros(n);M12 = zeros(n);M13 = zeros(n);
M21 = zeros(n);M22 = zeros(n);M23 = zeros(n);
M31 = zeros(n);M32 = zeros(n);M33 = zeros(n);

e2= e^2; 
for j = 1:n
    for i = 1:n
        hk = abs(zsurf(j)); % wall at z=0

        diffx  = xsurf(i)-xsurf(j); diffy  = ysurf(i)-ysurf(j); diffz  = zsurf(i)-zsurf(j); 
        r2     = diffx.^2  + diffy.^2  + diffz.^2;

        diffxs = xsurf(i)-xsurf(j); diffys = ysurf(i)-ysurf(j); diffzs = zsurf(i)+zsurf(j); 
        r2s    = diffxs.^2 + diffys.^2 + diffzs.^2;
        
        % ***************          
        M11(i,j) = func_H1(r2,e2)            - func_H1(r2s,e2) ...
              + func_H2(r2,e2).*diffx.*diffx - func_H2(r2s,e2).*diffxs.*diffxs ...
              + hk^2*(   func_D1(r2s,e2) + func_D2(r2s,e2).*diffxs.*diffxs ) ...
              + 2*hk*(  -func_H2(r2s,e2) .*diffzs ...
                        +0.5*func_D2(r2s,e2).*(-diffxs).*diffzs.*diffxs) ...
              + 2*hk*func_H3(r2s,e2).*(-diffzs); 
          
        M12(i,j) = func_H2(r2,e2).*diffy.*diffx - func_H2(r2s,e2).*diffys.*diffxs ...
              + hk^2*(                   + func_D2(r2s,e2) .*diffys.*diffxs ) ...
              + 2*hk*(   0.5*func_D2(r2s,e2).*(-diffys).*diffzs.*diffxs); 
        
        
        M13(i,j) = func_H2(r2,e2).*diffz.*diffx - func_H2(r2s,e2).*diffzs.*diffxs ...
              + hk^2*(                     func_D2(r2s,e2) .*(-diffzs).*diffxs ) ...
              + 2*hk*(   func_H2(r2s,e2) .*diffxs ...
                        +0.5*func_D2(r2s,e2).*diffzs.*diffzs.*diffxs);  
        
        % ***************
        M21(i,j) = func_H2(r2,e2).*diffx.*diffy - func_H2(r2s,e2).*diffxs.*diffys ...
              + hk^2*(                     func_D2(r2s,e2) .*diffxs.*diffys ) ...
              + 2*hk*(   0.5*func_D2(r2s,e2).*(-diffxs).*diffzs.*diffys); 
        
        
        M22(i,j) = func_H1(r2,e2)            - func_H1(r2s,e2) ...
              + func_H2(r2,e2).*diffy.*diffy - func_H2(r2s,e2).*diffys.*diffys ...
              + hk^2*(   func_D1(r2s,e2) + func_D2(r2s,e2).*diffys.*diffys ) ...
              + 2*hk*(  -func_H2(r2s,e2) .*diffzs ...
                        +0.5*func_D2(r2s,e2).*(-diffys).*diffzs.*diffys) ...
              + 2*hk*func_H3(r2s,e2).*(-diffzs);  
        
        
        M23(i,j) = func_H2(r2,e2).*diffz.*diffy - func_H2(r2s,e2).*diffzs.*diffys ...
              + hk^2*(                     func_D2(r2s,e2) .*(-diffzs).*diffys ) ...
              + 2*hk*(   func_H2(r2s,e2) .*diffys ...
                        +0.5*func_D2(r2s,e2).*diffzs.*diffzs.*diffys);
        
        % ***************
        M31(i,j) = func_H2(r2,e2).*diffx.*diffz - func_H2(r2s,e2).*diffxs.*diffzs ...
              + hk^2*(                     func_D2(r2s,e2) .*diffxs.*diffzs ) ...
              + 2*hk*(   0.5*func_D2(r2s,e2).*(-diffxs).*diffzs.*diffzs ...
                        +(func_H3(r2s,e2) - func_H2(r2s,e2)).*(-diffxs) )...
              + 2*hk*func_H3(r2s,e2).*diffxs; 
        
        
        M32(i,j) = func_H2(r2,e2).*diffy.*diffz - func_H2(r2s,e2).*diffys.*diffzs ...
              + hk^2*(                     func_D2(r2s,e2) .*diffys.*diffzs ) ...
              + 2*hk*(  +0.5*func_D2(r2s,e2).*(-diffys).*diffzs.*diffzs ...
                        +(func_H3(r2s,e2) - func_H2(r2s,e2)).*(-diffys) )...
              + 2*hk*func_H3(r2s,e2).*diffys; 
        
        
        M33(i,j) = func_H1(r2,e2)            - func_H1(r2s,e2) ...
              + func_H2(r2,e2).*diffz.*diffz - func_H2(r2s,e2).*diffzs.*diffzs ...
              + hk^2*(  -func_D1(r2s,e2) - func_D2(r2s,e2).*diffzs.*diffzs ) ...
              + 2*hk*(  2*func_H2(r2s,e2) .*diffzs ...
                        +0.5*func_D2(r2s,e2).*diffzs.*diffzs.*diffzs ...
                        +(func_H3(r2s,e2) - func_H2(r2s,e2)).*diffzs   );
        
        
%         
    end
end
M = [M11 M12 M13;M21 M22 M23;M31 M32 M33];

% Solve for force vector F
% F = gmres(M,U*visc);
F = M\(U*visc);












